"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1968],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=o,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||i;return n?a.createElement(m,r(r({ref:t},c),{},{components:n})):a.createElement(m,r({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1836:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],l={title:"Post Lecture Reading",sidebar_label:"Post Lecture",pagination_next:null,pagination_prev:null,hide_table_of_contents:!1,sidebar_position:5},s="After Lecture",p={unversionedId:"lecture-17/post-lecture",id:"lecture-17/post-lecture",title:"Post Lecture Reading",description:"Recommended videos",source:"@site/docs/lecture-17/post-lecture.md",sourceDirName:"lecture-17",slug:"/lecture-17/post-lecture",permalink:"/sp2022/lecture-17/post-lecture",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Post Lecture Reading",sidebar_label:"Post Lecture",pagination_next:null,pagination_prev:null,hide_table_of_contents:!1,sidebar_position:5},sidebar:"docs"},c={},d=[{value:"Recommended videos",id:"recommended-videos",level:2},{value:"Deploying app to internet",id:"deploying-app-to-internet",level:2},{value:"Backend",id:"backend",level:3},{value:"Frontend",id:"frontend",level:3},{value:"Serving static files from the backend",id:"serving-static-files-from-the-backend",level:3},{value:"The whole app to internet",id:"the-whole-app-to-internet",level:3},{value:"Streamlining deploying of the frontend",id:"streamlining-deploying-of-the-frontend",level:3},{value:"Proxy",id:"proxy",level:3},{value:"Deploying the database backend to production",id:"deploying-the-database-backend-to-production",level:3},{value:"Lint",id:"lint",level:2},{value:"backend",id:"backend-1",level:3},{value:"Frontend",id:"frontend-1",level:3},{value:"Debugging Node applications{debug}",id:"debugging-node-applicationsdebug",level:2},{value:"Visual Studio Code",id:"visual-studio-code",level:3},{value:"Chrome dev tools",id:"chrome-dev-tools",level:3},{value:"Question everything",id:"question-everything",level:3},{value:"Reference",id:"reference",level:2}],u={toc:d};function h(e){var t=e.components,l=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"after-lecture"},"After Lecture"),(0,i.kt)("h2",{id:"recommended-videos"},"Recommended videos"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://youtu.be/r2S89Hm1Uq0"},"Deploy Node.js website on Heroku for Free")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://youtu.be/QTOkqzCTGxw"},"Advanced: Introduction to Heroku")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://youtu.be/hfpkMyvSOp4"},"Debugging Node.js with Google Chrome and Visual Studio Code"))),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"}," ",(0,i.kt)("strong",{parentName:"p"},"Credits"),": The post lecture material has been written by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mluukkai"},"Matti Luukkainen")," from ",(0,i.kt)("a",{parentName:"p",href:"https://fullstackopen.com/en/"},"University of Helsinki"),". The material is licensed under the Creative Commons BY-NC-SA 3.0 License."))),(0,i.kt)("h2",{id:"deploying-app-to-internet"},"Deploying app to internet"),(0,i.kt)("h3",{id:"backend"},"Backend"),(0,i.kt)("p",null,"We'll use good old ",(0,i.kt)("a",{parentName:"p",href:"https://www.heroku.com"},"Heroku")," for this."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"If you have never used Heroku before, you can find instructions from ",(0,i.kt)("a",{parentName:"p",href:"https://devcenter.heroku.com/articles/getting-started-with-nodejs"},"Heroku documentation")," or by Googling.")),(0,i.kt)("p",null,"Add a file called  ",(0,i.kt)("i",null,"Procfile")," to the backend project's root to tell Heroku how to start the application. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"web: npm start\n")),(0,i.kt)("p",null,"Change the definition of the port our application uses at the bottom of the ",(0,i.kt)("i",null,"index.js")," file like so: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const PORT = process.env.PORT || 3001  // highlight-line\napp.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`)\n})\n")),(0,i.kt)("p",null,"Now we are using the port defined in ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Environment_variable"},"environment variable")," ",(0,i.kt)("em",{parentName:"p"},"PORT")," or port 3001 if the environment variable ",(0,i.kt)("em",{parentName:"p"},"PORT")," is undefined.\nHeroku configures application port based on the environment variable. "),(0,i.kt)("p",null,"Create a Git repository in the project directory, and add ",(0,i.kt)("i",null,".gitignore")," with the following contents"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"node_modules\n")),(0,i.kt)("p",null,"Create Heroku account in ",(0,i.kt)("a",{parentName:"p",href:"https://devcenter.heroku.com/"},"https://devcenter.heroku.com/"),"\nInstall Heroku package using the command: ",(0,i.kt)("inlineCode",{parentName:"p"},"npm install -g heroku"),"\nCreate a Heroku application with the command ",(0,i.kt)("inlineCode",{parentName:"p"},"heroku create"),", commit your code to the repository and move it to Heroku with command git push ",(0,i.kt)("inlineCode",{parentName:"p"},"heroku main"),"."),(0,i.kt)("p",null,"If everything went well, the application works:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(3126).Z,width:"1574",height:"782"})),(0,i.kt)("p",null,"If not, the issue can be found by reading heroku logs with command ",(0,i.kt)("i",null,"heroku logs"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"NB")," At least in the beginning it's good to keep an eye on the heroku logs at all times. The best way to do this is with command ",(0,i.kt)("i",null,"heroku logs -t")," which prints the logs to console whenever something happens on the server. ")),(0,i.kt)("p",null,"The frontend also works with the backend on Heroku. You can check this by changing the backend's address on the frontend to be the backend's address in Heroku instead of ",(0,i.kt)("i",null,"http://localhost:3001"),"."),(0,i.kt)("p",null,"The next question is, how do we deploy the frontend to the Internet? We have multiple options. Let's go through one of them next. "),(0,i.kt)("h3",{id:"frontend"},"Frontend"),(0,i.kt)("p",null,"So far we have been running React code in ",(0,i.kt)("i",null,"development mode"),". In development mode the application is configured to give clear error messages, immediately render code changes to the browser, and so on. "),(0,i.kt)("p",null,"When the application is deployed, we must create a ",(0,i.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/optimizing-performance.html#use-the-production-build"},"production build")," or a version of the application which is optimized for production. "),(0,i.kt)("p",null,"A production build of applications created with ",(0,i.kt)("i",null,"create-react-app")," can be created with command ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/facebookincubator/create-react-app#npm-run-build-or-yarn-build"},"npm run build"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NOTE:")," at the time of writing (20th January 2022) create-react-app had a bug that causes the wollowing error ",(0,i.kt)("em",{parentName:"p"},"TypeError: MiniCssExtractPlugin is not a constructor")),(0,i.kt)("p",null,"A possible fix is found from ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/facebook/create-react-app/issues/11930"},"here"),". Add the following to the file ",(0,i.kt)("i",null,"package.json")," "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  // ...\n  "resolutions": {\n    "mini-css-extract-plugin": "2.4.5"\n  }\n}\n')),(0,i.kt)("p",null,"and run commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"rm -rf package-lock.json\nrm -rf node_modules\nnpm cache clean --force\nnpm install\n")),(0,i.kt)("p",null,"After these ",(0,i.kt)("em",{parentName:"p"},"npm run build")," should work."),(0,i.kt)("p",null,"Let's run this command from the ",(0,i.kt)("i",null,"root of the frontend project"),"."),(0,i.kt)("p",null,"This creates a directory called ",(0,i.kt)("i",null,"build")," (which contains the only HTML file of our application, ",(0,i.kt)("i",null,"index.html")," ) which contains the directory ",(0,i.kt)("i",null,"static"),". ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Minification_(programming)"},"Minified")," version of our application's JavaScript code will be generated to the ",(0,i.kt)("i",null,"static"),"  directory. Even though the application code is in multiple files, all of the JavaScript will be minified into one file. Actually all of the code from all of the application's dependencies will also be minified into this single file. "),(0,i.kt)("p",null,"The minified code is not very readable. The beginning of the code looks like this: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'!function(e){function r(r){for(var n,f,i=r[0],l=r[1],a=r[2],c=0,s=[];c<i.length;c++)f=i[c],o[f]&&s.push(o[f][0]),o[f]=0;for(n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n]);for(p&&p(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r<u.length;r++){for(var t=u[r],n=!0,i=1;i<t.length;i++){var l=t[i];0!==o[l]&&(n=!1)}n&&(u.splice(r--,1),e=f(f.s=t[0]))}return e}var n={},o={2:0},u=[];function f(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,f),t.l=!0,t.exports}f.m=e,f.c=n,f.d=function(e,r,t){f.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},f.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})\n')),(0,i.kt)("h3",{id:"serving-static-files-from-the-backend"},"Serving static files from the backend"),(0,i.kt)("p",null,"One option for deploying the frontend is to copy the production build (the ",(0,i.kt)("i",null,"build")," directory) to the root of the backend repository and configure the backend to show the frontend's ",(0,i.kt)("i",null,"main page")," (the file ",(0,i.kt)("i",null,"build/index.html"),") as its main page. "),(0,i.kt)("p",null,"We begin by copying the production build of the frontend to the root of the backend. With a Mac or Linux computer, the copying can be done from the frontend directory with the command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cp -r build ../notes-backend\n")),(0,i.kt)("p",null,"If you are using a Windows computer, you may use either ",(0,i.kt)("a",{parentName:"p",href:"https://www.windows-commandline.com/windows-copy-command-syntax-examples/"},"copy")," or ",(0,i.kt)("a",{parentName:"p",href:"https://www.windows-commandline.com/xcopy-command-syntax-examples/"},"xcopy")," command instead. Otherwise, simply do a copy and paste. "),(0,i.kt)("p",null,"The backend directory should now look as follows:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(731).Z,width:"1352",height:"170"})),(0,i.kt)("p",null,"To make express show ",(0,i.kt)("i",null,"static content"),", the page ",(0,i.kt)("i",null,"index.html")," and the JavaScript, etc., it fetches, we need a built-in middleware from express called ",(0,i.kt)("a",{parentName:"p",href:"http://expressjs.com/en/starter/static-files.html"},"static"),"."),(0,i.kt)("p",null,"When we add the following amidst the declarations of middlewares"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"app.use(express.static('build'))\n")),(0,i.kt)("p",null,"whenever express gets an HTTP GET request it will first check if the ",(0,i.kt)("i",null,"build")," directory contains a file corresponding to the request's address. If a correct file is found, express will return it. "),(0,i.kt)("p",null,"Now HTTP GET requests to the address ",(0,i.kt)("i",null,(0,i.kt)("a",{parentName:"p",href:"http://www.serversaddress.com/index.html"},"www.serversaddress.com/index.html"))," or ",(0,i.kt)("i",null,(0,i.kt)("a",{parentName:"p",href:"http://www.serversaddress.com"},"www.serversaddress.com"))," will show the React frontend. GET requests to the address ",(0,i.kt)("i",null,(0,i.kt)("a",{parentName:"p",href:"http://www.serversaddress.com/api/notes"},"www.serversaddress.com/api/notes"))," will be handled by the backend's code."),(0,i.kt)("p",null,"Because of our situation, both the frontend and the backend are at the same address, we can declare ",(0,i.kt)("em",{parentName:"p"},"baseUrl")," as a ",(0,i.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2"},"relative")," URL. This means we can leave out the part declaring the server. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import axios from 'axios'\nconst baseUrl = '/api/notes' // highlight-line\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n// ...\n")),(0,i.kt)("p",null,"After the change, we have to create a new production build and copy it to the root of the backend repository. "),(0,i.kt)("p",null,"The application can now be used from the ",(0,i.kt)("i",null,"backend")," address ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:3001"},"http://localhost:3001"),":"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(3685).Z,width:"1336",height:"646"})),(0,i.kt)("p",null,"When we use a browser to go to the address ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:3001"},"http://localhost:3001"),", the server returns the ",(0,i.kt)("i",null,"index.html")," file from the ",(0,i.kt)("i",null,"build")," repository. Summarized contents of the file are as follows: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<head>\n  <meta charset="utf-8"/>\n  <title>React App</title>\n  <link href="/static/css/main.f9a47af2.chunk.css" rel="stylesheet">\n</head>\n<body>\n  <div id="root"></div>\n  <script src="/static/js/1.578f4ea1.chunk.js"><\/script>\n  <script src="/static/js/main.104ca08d.chunk.js"><\/script>\n</body>\n</html>\n')),(0,i.kt)("p",null,"The file contains instructions to fetch a CSS stylesheet defining the styles of the application, and two ",(0,i.kt)("i",null,"script")," tags which instruct the browser to fetch the JavaScript code of the application - the actual React application. "),(0,i.kt)("p",null,"The React code fetches notes from the server address ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:3001/api/notes"},"http://localhost:3001/api/notes")," and renders them to the screen. The communications between the server and the browser can be seen in the ",(0,i.kt)("i",null,"Network")," tab of the developer console:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(9222).Z,width:"1724",height:"998"})),(0,i.kt)("p",null,"The setup that is ready for product deployment looks as follows:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(4839).Z,width:"396",height:"391"})),(0,i.kt)("p",null,"Unlike when running the app in a development environment, everything is now in the same node/express-backend that runs in localhost:3001. When the browser goes to the page, the file ",(0,i.kt)("i",null,"index.html")," is rendered. That causes the browser to fetch the product version of the React app. Once it starts to run, it fetches the json-data from the address localhost:3001/api/notes."),(0,i.kt)("h3",{id:"the-whole-app-to-internet"},"The whole app to internet"),(0,i.kt)("p",null,"After ensuring that the production version of the application works locally, commit the production build of the frontend to the backend repository, and push the code to Heroku again. "),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://obscure-harbor-49797.herokuapp.com/"},"The application")," works perfectly, except we haven't added the functionality for changing the importance of a note to the backend yet. "),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(7769).Z,width:"1498",height:"668"})),(0,i.kt)("p",null,"Our application saves the notes to a variable. If the application crashes or is restarted, all of the data will disappear. "),(0,i.kt)("p",null,"The application needs a database. Before we introduce one, let's go through a few things. "),(0,i.kt)("p",null,"The setup looks like now as follows:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(6114).Z,width:"1090",height:"1064"})),(0,i.kt)("p",null,"The node/express-backend now resides in the Heroku server. When the root address that is of the form ",(0,i.kt)("a",{parentName:"p",href:"https://glacial-ravine-74819.herokuapp.com/"},"https://glacial-ravine-74819.herokuapp.com/")," is accessed, the browser loads and executes the React app that fetches the json-data from the Heroku server."),(0,i.kt)("h3",{id:"streamlining-deploying-of-the-frontend"},"Streamlining deploying of the frontend"),(0,i.kt)("p",null,"To create a new production build of the frontend without extra manual work, let's add some npm-scripts to the ",(0,i.kt)("i",null,"package.json")," of the backend repository: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    //...\n    "build:ui": "rm -rf build && cd ../part2-notes/ && npm run build && cp -r build ../notes-backend",\n    "deploy": "git push heroku main",\n    "deploy:full": "npm run build:ui && git add . && git commit -m uibuild && git push && npm run deploy",    \n    "logs:prod": "heroku logs --tail"\n  }\n}\n')),(0,i.kt)("p",null,"The script ",(0,i.kt)("em",{parentName:"p"},"npm run build:ui")," builds the frontend and copies the production version under the backend repository.  ",(0,i.kt)("em",{parentName:"p"},"npm run deploy")," releases the current backend to heroku. "),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"npm run deploy:full")," combines these two and contains the necessary ",(0,i.kt)("i",null,"git")," commands to update the backend repository. "),(0,i.kt)("p",null,"There is also a script ",(0,i.kt)("em",{parentName:"p"},"npm run logs:prod")," to show the heroku logs."),(0,i.kt)("p",null,"Note that the directory paths in the script ",(0,i.kt)("i",null,"build:ui")," depend on the location of repositories in the file system."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"NB"),"  On Windows, npm scripts are executed in cmd.exe as the default shell which does not support bash commands. For the above bash commands to work, you can change the default shell to Bash (in the default Git for Windows installation) as follows:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md"},'npm config set script-shell "C:\\\\Program Files\\\\git\\\\bin\\\\bash.exe"\n')),(0,i.kt)("p",null,"Another opstion is the use of ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/shx"},"shx"),"."),(0,i.kt)("h3",{id:"proxy"},"Proxy"),(0,i.kt)("p",null,"Changes on the frontend have caused it to no longer work in development mode (when started with command ",(0,i.kt)("em",{parentName:"p"},"npm start"),"), as the connection to the backend does not work. "),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(1802).Z,width:"1478",height:"988"})),(0,i.kt)("p",null,"This is due to changing the backend address to a relative URL: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const baseUrl = '/api/notes'\n")),(0,i.kt)("p",null,"Because in development mode the frontend is at the address ",(0,i.kt)("i",null,"localhost:3000"),", the requests to the backend go to the wrong address ",(0,i.kt)("i",null,"localhost:3000/api/notes"),". The backend is at ",(0,i.kt)("i",null,"localhost:3001"),". "),(0,i.kt)("p",null,"If the project was created with create-react-app, this problem is easy to solve. It is enough to add the following declaration to the ",(0,i.kt)("i",null,"package.json")," file of the frontend repository. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "dependencies": {\n    // ...\n  },\n  "scripts": {\n    // ...\n  },\n  "proxy": "http://localhost:3001"  // highlight-line\n}\n')),(0,i.kt)("p",null,"After a restart, the React development environment will work as a ",(0,i.kt)("a",{parentName:"p",href:"https://create-react-app.dev/docs/proxying-api-requests-in-development/"},"proxy"),". If the React code does an HTTP request to a server address at ",(0,i.kt)("i",null,"http://localhost:3000")," not managed by the React application itself (i.e. when requests are not about fetching the CSS or JavaScript of the application), the request will be redirected to the server at ",(0,i.kt)("i",null,"http://localhost:3001"),". "),(0,i.kt)("p",null,"Now the frontend is also fine, working with the server both in development- and production mode. "),(0,i.kt)("p",null,"A negative aspect of our approach is how complicated it is to deploy the frontend. Deploying a new version requires generating new production build of the frontend and copying it to the backend repository. This makes creating an automated ",(0,i.kt)("a",{parentName:"p",href:"https://martinfowler.com/bliki/DeploymentPipeline.html"},"deployment pipeline")," more difficult. Deployment pipeline means an automated and controlled way to move the code from the computer of the developer through different tests and quality checks to the production environment. Building a deployment pipeline will be covered in another lecture."),(0,i.kt)("p",null,"There are multiple ways to achieve this (for example placing both backend and frontend code ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mars/heroku-cra-node"},"to the same repository")," ) but we will not go into those now. "),(0,i.kt)("p",null,"In some situations it may be sensible to deploy the frontend code as its own application. With apps created with create-react-app it is ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mars/create-react-app-buildpack"},"straightforward"),"."),(0,i.kt)("p",null,"Current code of the backend can be found on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fullstack-hy2020/part3-notes-backend/tree/part3-3"},"Github"),", in the branch ",(0,i.kt)("i",null,"part3-3"),". The changes in frontend code are in ",(0,i.kt)("i",null,"part3-1")," branch of the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fullstack-hy/part2-notes/tree/part3-1"},"frontend repository"),"."),(0,i.kt)("h3",{id:"deploying-the-database-backend-to-production"},"Deploying the database backend to production"),(0,i.kt)("p",null,"The application should work almost as-is in Heroku. We do have to generate a new production build of the frontend due to the changes that we have made to our frontend. "),(0,i.kt)("p",null,"The environment variables defined in dotenv will only be used when the backend is not in ",(0,i.kt)("i",null,"production mode"),", i.e. Heroku."),(0,i.kt)("p",null,"We defined the environment variables for development in file ",(0,i.kt)("i",null,".env"),", but the environment variable that defines the database URL in production should be set to Heroku with the ",(0,i.kt)("em",{parentName:"p"},"heroku config:set")," command."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"heroku config:set MONGODB_URI=mongodb+srv://fullstack:secretpasswordhere@cluster0-ostce.mongodb.net/note-app?retryWrites=true\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NB:")," if the command causes an error, give the value of MONGODB_URI in apostrophes:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"heroku config:set MONGODB_URI='mongodb+srv://fullstack:secretpasswordhere@cluster0-ostce.mongodb.net/note-app?retryWrites=true'\n")),(0,i.kt)("p",null,"The application should now work. Sometimes things don't go according to plan. If there are problems, ",(0,i.kt)("i",null,"heroku logs")," will be there to help. My own application did not work after making the changes. The logs showed the following:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(7954).Z,width:"1600",height:"674"})),(0,i.kt)("p",null,"For some reason the URL of the database was undefined. The ",(0,i.kt)("i",null,"heroku config")," command revealed that I had accidentally defined the URL to the ",(0,i.kt)("em",null,"MONGO","_","URL")," environment variable, when the code expected it to be in ",(0,i.kt)("em",null,"MONGODB","_","URI"),"."),(0,i.kt)("p",null,"You can find the code for our current application in its entirety in the ",(0,i.kt)("i",null,"part3-5")," branch of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fullstack-hy2019/part3-notes-backend/tree/part3-5"},"this github repository"),"."),(0,i.kt)("h2",{id:"lint"},"Lint"),(0,i.kt)("h3",{id:"backend-1"},"backend"),(0,i.kt)("p",null,"We will take a look at an important tool called ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Lint_(software)"},"lint"),". Wikipedia says the following about lint:"),(0,i.kt)("blockquote",null,(0,i.kt)("i",null,"Generically, lint or a linter is any tool that detects and flags errors in programming languages, including stylistic errors. The term lint-like behavior is sometimes applied to the process of flagging suspicious language usage. Lint-like tools generally perform static analysis of source code.")),(0,i.kt)("p",null,"In compiled statically typed languages like Java, IDEs like NetBeans can point out errors in the code, even ones that are more than just compile errors. Additional tools for performing ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Static_program_analysis"},"static analysis")," like ",(0,i.kt)("a",{parentName:"p",href:"https://checkstyle.sourceforge.io"},"checkstyle"),", can be used for expanding the capabilities of the IDE to also point out problems related to style, like indentation."),(0,i.kt)("p",null,'In the JavaScript universe, the current leading tool for static analysis aka. "linting" is ',(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/"},"ESlint"),"."),(0,i.kt)("p",null,"Let's install ESlint as a development dependency to the backend project with the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install eslint --save-dev\n")),(0,i.kt)("p",null,"After this we can initialize a default ESlint configuration with the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx eslint --init\n")),(0,i.kt)("p",null,"We will answer all of the questions:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(8005).Z,width:"1550",height:"458"})),(0,i.kt)("p",null,"The configuration will be saved in the ",(0,i.kt)("em",{parentName:"p"},".eslintrc.js")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n    'env': {\n        'commonjs': true,\n        'es2021': true,\n        'node': true\n    },\n    'extends': 'eslint:recommended',\n    'parserOptions': {\n        'ecmaVersion': 'latest'\n    },\n    'rules': {\n        'indent': [\n            'error',\n            4\n        ],\n        'linebreak-style': [\n            'error',\n            'unix'\n        ],\n        'quotes': [\n            'error',\n            'single'\n        ],\n        'semi': [\n            'error',\n            'never'\n        ]\n    }\n}\n")),(0,i.kt)("p",null,"Let's immediately change the rule concerning indentation, so that the indentation level is two spaces."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'"indent": [\n    "error",\n    2\n],\n')),(0,i.kt)("p",null,"Inspecting and validating a file like ",(0,i.kt)("em",{parentName:"p"},"index.js")," can be done with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx eslint index.js\n")),(0,i.kt)("p",null,"It is recommended to create a separate ",(0,i.kt)("em",{parentName:"p"},"npm script")," for linting:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  // ...\n  "scripts": {\n    "start": "node index.js",\n    "dev": "nodemon index.js",\n    // ...\n    "lint": "eslint ." // highlight-line\n  },\n  // ...\n}\n')),(0,i.kt)("p",null,"Now the ",(0,i.kt)("em",{parentName:"p"},"npm run lint")," command will check every file in the project."),(0,i.kt)("p",null,"Also the files in the ",(0,i.kt)("em",null,"build")," directory get checked when the command is run. We do not want this to happen, and we can accomplish this by creating an ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/user-guide/configuring#ignoring-files-and-directories"},".eslintignore")," file in the project's root with the following contents:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"build\n")),(0,i.kt)("p",null,"This causes the entire ",(0,i.kt)("em",null,"build")," directory to not be checked by ESlint."),(0,i.kt)("p",null,"Lint has quite a lot to say about our code:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(2805).Z,width:"1446",height:"840"})),(0,i.kt)("p",null,"Let's not fix these issues just yet."),(0,i.kt)("p",null,"A better alternative to executing the linter from the command line is to configure a  ",(0,i.kt)("i",null,"eslint-plugin")," to the editor, that runs the linter continuously. By using the plugin you will see errors in your code immediately. You can find more information about the Visual Studio ESLint plugin ",(0,i.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"},"here"),"."),(0,i.kt)("p",null,"The VS Code ESlint plugin will underline style violations with a red line:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(5592).Z,width:"1932",height:"628"})),(0,i.kt)("p",null,"This makes errors easy to spot and fix right away."),(0,i.kt)("p",null,"ESlint has a vast array of ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/"},"rules")," that are easy to take into use by editing the ",(0,i.kt)("i",null,".eslintrc.js")," file."),(0,i.kt)("p",null,"Let's add the ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/eqeqeq"},"eqeqeq")," rule that warns us, if equality is checked with anything but the triple equals operator. The rule is added under the ",(0,i.kt)("i",null,"rules")," field in the configuration file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"{\n  // ...\n  'rules': {\n    // ...\n   'eqeqeq': 'error',\n  },\n}\n")),(0,i.kt)("p",null,"While we're at it, let's make a few other changes to the rules."),(0,i.kt)("p",null,"Let's prevent unnecessary ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/no-trailing-spaces"},"trailing spaces")," at the ends of lines, let's require that ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/object-curly-spacing"},"there is always a space before and after curly braces"),", and let's also demand a consistent use of whitespaces in the function parameters of arrow functions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"{\n  // ...\n  'rules': {\n    // ...\n    'eqeqeq': 'error',\n    'no-trailing-spaces': 'error',\n    'object-curly-spacing': [\n        'error', 'always'\n    ],\n    'arrow-spacing': [\n        'error', { 'before': true, 'after': true }\n    ]\n  },\n}\n")),(0,i.kt)("p",null,"Our default configuration takes a bunch of predetermined rules into use from ",(0,i.kt)("i",null,"eslint:recommended"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"'extends': 'eslint:recommended',\n")),(0,i.kt)("p",null,"This includes a rule that warns about ",(0,i.kt)("em",{parentName:"p"},"console.log")," commands. ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/user-guide/configuring#configuring-rules"},"Disabling"),' a rule can be accomplished by defining its "value" as 0 in the configuration file. Let\'s do this for the ',(0,i.kt)("i",null,"no-console")," rule in the meantime."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"{\n  // ...\n  'rules': {\n    // ...\n    'eqeqeq': 'error',\n    'no-trailing-spaces': 'error',\n    'object-curly-spacing': [\n        'error', 'always'\n    ],\n    'arrow-spacing': [\n        'error', { 'before': true, 'after': true }\n    ],\n    'no-console': 0 // highlight-line\n  },\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NB")," when you make changes to the ",(0,i.kt)("i",null,".eslintrc.js")," file, it is recommended to run the linter from the command line. This will verify that the configuration file is correctly formatted:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(5250).Z,width:"1608",height:"588"})),(0,i.kt)("p",null,"If there is something wrong in your configuration file, the lint plugin can behave quite erratically."),(0,i.kt)("p",null,"Many companies define coding standards that are enforced throughout the organization through the ESlint configuration file. It is not recommended to keep reinventing the wheel over and over again, and it can be a good idea to adopt a ready-made configuration from someone else's project into yours. Recently many projects have adopted the Airbnb ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/airbnb/javascript"},"Javascript style guide")," by taking Airbnb's ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb"},"ESlint")," configuration into use."),(0,i.kt)("p",null,"You can find the code for our current application in its entirety in the ",(0,i.kt)("i",null,"part3-7")," branch of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fullstack-hy2020/part3-notes-backend/tree/part3-7"},"this github repository"),"."),(0,i.kt)("h3",{id:"frontend-1"},"Frontend"),(0,i.kt)("p",null,"Let's take ESlint to use in the frontend as well."),(0,i.kt)("p",null,"Create-react-app has installed ESlint to the project by default, so all that's left for us to do is to define our desired configuration in the ",(0,i.kt)("i",null,".eslintrc.js")," file. "),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Do not run the ",(0,i.kt)("em",{parentName:"p"},"eslint --init")," command. It will install the latest version of ESlint that is not compatible with the configuration file created by create-react-app!"))),(0,i.kt)("p",null,"Next, we will start testing the frontend and in order to avoid undesired and irrelevant linter errors we will install the ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/eslint-plugin-jest"},"eslint-plugin-jest")," package:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev eslint-plugin-jest\n")),(0,i.kt)("p",null,"Let's create a ",(0,i.kt)("i",null,".eslintrc.js")," file with the following contents:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'/* eslint-env node */\nmodule.exports = {\n  "env": {\n      "browser": true,\n      "es6": true,\n      "jest/globals": true \n  },\n  "extends": [ \n      "eslint:recommended",\n      "plugin:react/recommended"\n  ],\n  "parserOptions": {\n      "ecmaFeatures": {\n          "jsx": true\n      },\n      "ecmaVersion": 2018,\n      "sourceType": "module"\n  },\n  "plugins": [\n      "react", "jest"\n  ],\n  "rules": {\n      "indent": [\n          "error",\n          2  \n      ],\n      "linebreak-style": [\n          "error",\n          "unix"\n      ],\n      "quotes": [\n          "error",\n          "single"\n      ],\n      "semi": [\n          "error",\n          "never"\n      ],\n      "eqeqeq": "error",\n      "no-trailing-spaces": "error",\n      "object-curly-spacing": [\n          "error", "always"\n      ],\n      "arrow-spacing": [\n          "error", { "before": true, "after": true }\n      ],\n      "no-console": 0,\n      "react/prop-types": 0,\n      "react/react-in-jsx-scope": "off"\n  },\n  "settings": {\n    "react": {\n      "version": "detect"\n    }\n  }\n}\n')),(0,i.kt)("p",null,"NOTE: If you are using Visual Studio Code together with ESLint plugin, you might need to add additional workspace setting for it to work. If you are seeing ",(0,i.kt)("inlineCode",{parentName:"p"},"Failed to load plugin react: Cannot find module 'eslint-plugin-react'")," additional configuration is needed. Adding the line ",(0,i.kt)("inlineCode",{parentName:"p"},'"eslint.workingDirectories": [{ "mode": "auto" }]')," to settings.json in the workspace seems to work. See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/microsoft/vscode-eslint/issues/880#issuecomment-578052807"},"here")," for more information. "),(0,i.kt)("p",null,"Let's create ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/user-guide/configuring#ignoring-files-and-directories"},".eslintignore")," file with the following contents to the repository root"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"node_modules\nbuild\n.eslintrc.js\n")),(0,i.kt)("p",null,"Now the directories ",(0,i.kt)("em",null,"build")," and ",(0,i.kt)("em",null,"node_modules")," will be skipped when linting."),(0,i.kt)("p",null,"Let us also create a npm script to run the lint:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'{\n  // ...\n  {\n    "scripts": {\n    "start": "react-scripts start",\n    "build": "react-scripts build",\n    "test": "react-scripts test",\n    "eject": "react-scripts eject",\n    "server": "json-server -p3001 db.json",\n    "eslint": "eslint ." // highlight-line\n  },\n  // ...\n}\n')),(0,i.kt)("p",null,"Component ",(0,i.kt)("em",{parentName:"p"},"Togglable")," causes a nasty looking warning ",(0,i.kt)("i",null,"Component definition is missing display name"),": "),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(8836).Z,width:"1822",height:"852"})),(0,i.kt)("p",null,"The react-devtools also reveals that the component does not have name:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(6366).Z,width:"1690",height:"932"})),(0,i.kt)("p",null,"Fortunately this is easy to fix"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"import { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  // ...\n})\n\nTogglable.displayName = 'Togglable' // highlight-line\n\nexport default Togglable\n")),(0,i.kt)("p",null,"You can find the code for our current application in its entirety in the ",(0,i.kt)("i",null,"part5-7")," branch of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fullstack-hy/part2-notes/tree/part5-7"},"this github repository"),"."),(0,i.kt)("p",null,"Note that create-react-app has also a ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/eslint-config-react-app"},"default ESLint-configuration"),", that we have now overriden. ",(0,i.kt)("a",{parentName:"p",href:"https://create-react-app.dev/docs/setting-up-your-editor/#extending-or-replacing-the-default-eslint-config"},"The documentation")," mentions that it is ok to replace the default but does not encourage to that:"),(0,i.kt)("i",null,"We highly recommend extending the base config, as removing it could introduce hard-to-find issues"),".",(0,i.kt)("h2",{id:"debugging-node-applicationsdebug"},"Debugging Node applications{debug}"),(0,i.kt)("p",null,"Debugging Node applications is slightly more difficult than debugging JavaScript running in your browser. Printing to the console is a tried and true method, and it's always worth doing. There are people who think that more sophisticated methods should be used instead, but I disagree. Even the world's elite open source developers ",(0,i.kt)("a",{parentName:"p",href:"https://tenderlovemaking.com/2016/02/05/i-am-a-puts-debuggerer.html"},"use")," this ",(0,i.kt)("a",{parentName:"p",href:"https://swizec.com/blog/javascript-debugging-slightly-beyond-consolelog/"},"method"),"."),(0,i.kt)("h3",{id:"visual-studio-code"},"Visual Studio Code"),(0,i.kt)("p",null,"The Visual Studio Code debugger can be useful in some situations. You can launch the application in debugging mode like this:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(679).Z,width:"2202",height:"960"})),(0,i.kt)("p",null,"Note that the application shouldn't be running in another console, otherwise the port will already be in use."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NB")," A newer version of Visual Studio Code may have ",(0,i.kt)("em",{parentName:"p"},"Run")," instead of ",(0,i.kt)("em",{parentName:"p"},"Debug"),". Furthermore, you may have to configure your ",(0,i.kt)("em",{parentName:"p"},"launch.json")," file to start debugging. This can be done by choosing ",(0,i.kt)("em",{parentName:"p"},"Add Configuration...")," on the drop-down menu, which is located next to the green play button and above ",(0,i.kt)("em",{parentName:"p"},"VARIABLES")," menu, and select ",(0,i.kt)("em",{parentName:"p"},'Run "npm start" in a debug terminal'),". For more detailed setup instructions, visit Visual Studio Code's ",(0,i.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/editor/debugging"},"Debugging documentation"),"."),(0,i.kt)("p",null,"Below you can see a screenshot where the code execution has been paused in the middle of saving a new note:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(14).Z,width:"2252",height:"1518"})),(0,i.kt)("p",null,"The execution has stopped at the ",(0,i.kt)("i",null,"breakpoint")," in line 63. In the console you can see the value of the ",(0,i.kt)("i",null,"note")," variable. In the top left window you can see other things related to the state of the application."),(0,i.kt)("p",null,"The arrows at the top can be used for controlling the flow of the debugger."),(0,i.kt)("p",null,"For some reason, I don't use the Visual Studio Code debugger a whole lot."),(0,i.kt)("h3",{id:"chrome-dev-tools"},"Chrome dev tools"),(0,i.kt)("p",null,"Debugging is also possible with the Chrome developer console by starting your application with the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"node --inspect index.js\n")),(0,i.kt)("p",null,"You can access the debugger by clicking the green icon - the node logo - that appears in the Chrome developer console:"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(6544).Z,width:"1688",height:"194"})),(0,i.kt)("p",null,"The debugging view works the same way as it did with React applications. The ",(0,i.kt)("i",null,"Sources")," tab can be used for setting breakpoints where the execution of the code will be paused."),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(7426).Z,width:"2310",height:"1184"})),(0,i.kt)("p",null,"All of the application's ",(0,i.kt)("i",null,"console.log")," messages will appear in the ",(0,i.kt)("i",null,"Console")," tab of the debugger. You can also inspect values of variables and execute your own JavaScript code."),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",src:n(52).Z,width:"1746",height:"530"})),(0,i.kt)("h3",{id:"question-everything"},"Question everything"),(0,i.kt)("p",null,"Debugging Full Stack applications may seem tricky at first. Soon our application will also have a database in addition to the frontend and backend, and there will be many potential areas for bugs in the application."),(0,i.kt)("p",null,"When the application \"does not work\", we have to first figure out where the problem actually occurs. It's very common for the problem to exist in a place where you didn't expect it to, and it can take minutes, hours, or even days before you find the source of the problem."),(0,i.kt)("p",null,"The key is to be systematic. Since the problem can exist anywhere, ",(0,i.kt)("i",null,"you must question everything"),", and eliminate all possibilities one by one. Logging to the console, Postman, debuggers, and experience will help."),(0,i.kt)("p",null,"When bugs occur, ",(0,i.kt)("i",null,"the worst of all possible strategies")," is to continue writing code. It will guarantee that your code will soon have even more bugs, and debugging them will be even more difficult. The ",(0,i.kt)("a",{parentName:"p",href:"http://gettingtolean.com/toyota-principle-5-build-culture-stopping-fix/"},"stop and fix")," principle from Toyota Production Systems is very effective in this situation as well."),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://fullstackopen.com"},"FullStackOpen: Part 3B, 3C, 3D, 5B"))))}h.isMDXComponent=!0},4839:function(e,t,n){t.Z=n.p+"assets/images/101-d051eec218e1d97b5648cef1cce8d8c2.png"},6114:function(e,t,n){t.Z=n.p+"assets/images/102-4557ca69b9707b02c728bebdaac2e0ef.png"},3126:function(e,t,n){t.Z=n.p+"assets/images/25ea-1de3c43cbb7d5ac91b71662470758f60.png"},731:function(e,t,n){t.Z=n.p+"assets/images/27ea-c7247cde2d956d898790763cd7f138df.png"},3685:function(e,t,n){t.Z=n.p+"assets/images/28e-75835dc614becee16863c400e8309176.png"},9222:function(e,t,n){t.Z=n.p+"assets/images/29ea-55b5328462bc1fcf085d416697d43ff6.png"},7769:function(e,t,n){t.Z=n.p+"assets/images/30ea-2975a51590d03e9e111becf233abe1f6.png"},1802:function(e,t,n){t.Z=n.p+"assets/images/32ea-96f848a5bb9c80a1a7f7ac2642fc16b0.png"},679:function(e,t,n){t.Z=n.p+"assets/images/35x-e9460ad94b66f430a57bb5624a6d8e17.png"},14:function(e,t,n){t.Z=n.p+"assets/images/36x-7e9dcd512d55cc85db1567130de3dd50.png"},6544:function(e,t,n){t.Z=n.p+"assets/images/37-7ede99b0037bf1fd58bb98936a434510.png"},7426:function(e,t,n){t.Z=n.p+"assets/images/38eb-bf8f7a3bea83feeb745f877da1ac52c0.png"},52:function(e,t,n){t.Z=n.p+"assets/images/39ea-ac373f0b2d36193a233c8b992578a761.png"},7954:function(e,t,n){t.Z=n.p+"assets/images/51a-3b01b773f6c723eaaab4aa9cb536b0c5.png"},8005:function(e,t,n){t.Z=n.p+"assets/images/52be-7698037cfc843e7b84957dd8ee83ea04.png"},2805:function(e,t,n){t.Z=n.p+"assets/images/53ea-0f0bfc8126b3b39e9892c31723c56d38.png"},5592:function(e,t,n){t.Z=n.p+"assets/images/54a-16fde0e4bdbe1096449cc5a55e2e15ca.png"},5250:function(e,t,n){t.Z=n.p+"assets/images/55-fbf552bc2f3902a4e60ed391bcf52c1c.png"},8836:function(e,t,n){t.Z=n.p+"assets/images/25x-36416bf3372dedc91075b0af15017046.png"},6366:function(e,t,n){t.Z=n.p+"assets/images/26ea-e135b51aa505c1dd7dbc52ec6c7885db.png"}}]);